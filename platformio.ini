; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
include_dir = src

[stm32]
platform = ststm32
framework = stm32cube
debug_tool = stlink
upload_protocol = dfu
src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<system/>
debug_build_flags = -O1 -ggdb3 -g3
board_build.stm32cube.custom_system_setup = yes
extra_scripts = 
  pre:script/pre_script.py
  post:script/post_script.py
build_flags = 
  -DUSBD_SOF_DISABLED
  -DUSE_FULL_LL_DRIVER
  -Isrc 
  -Isrc/main 
  -Isrc/main/rx 
  -Isrc/main/osd 
  -Isrc/main/config 
  -Isrc/main/usb 
  -Isrc/drivers 

[stm32f4]
extends = stm32
system_flags = 
  -mfloat-abi=softfp
  -mfpu=fpv4-sp-d16

[stm32f405]
extends = stm32f4
board = STM32F405RG
src_filter = ${stm32.src_filter} +<system/stm32f405>
board_build.ldscript = $PROJECT_DIR/src/system/stm32f405/flash_layout.ld
build_flags = 
  ${stm32f4.build_flags} 
  -Isrc/system/stm32f405

[stm32f411]
extends = stm32f4
board = STM32F411RE
src_filter = ${stm32.src_filter} +<system/stm32f411>
board_build.ldscript = $PROJECT_DIR/src/system/stm32f411/flash_layout.ld
build_flags = 
  ${stm32f4.build_flags} 
  -Isrc/system/stm32f411

[env:aikon_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/aikon_f4

[env:alienwhoop_v2]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/alienwhoop_v2

[env:alienwhoop_v3]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/alienwhoop_v3

[env:betafpvf411]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/betafpvf411

[env:betafpvf411rx]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -DHSE_STARTUP_TIMEOUT=2000
  -Isrc/targets/betafpvf411rx

[env:bluejayf4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/bluejayf4

[env:cc3d_revo_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/cc3d_revo_f4

[env:cc3d_revo_nano]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/cc3d_revo_nano

[env:clracing_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/clracing_f4

[env:crazybee_f4]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/crazybee_f4

[env:ff_racepit]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/ff_racepit

[env:flywoof411]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/flywoof411

[env:fortinif4osd]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/fortinif4osd

[env:fpvcyclef411]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/fpvcyclef411

[env:iflight_succex_e_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/iflight_succex_e_f4

[env:iflightf411rx]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/iflightf411rx

[env:luxf4osd]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/luxf4osd

[env:matekf405]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/matekf405

[env:matekf411]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/matekf411

[env:matekf411rx]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/matekf411rx

[env:nbd_infinity_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/nbd_infinity_f4

[env:nfe_breadboard]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/nfe_breadboard

[env:nox]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/nox

[env:nox_spi_rx]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/nox_spi_rx

[env:omnibusf4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/omnibusf4

[env:omnibusf4sd]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/omnibusf4sd

[env:pedro_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/pedro_f4

[env:pyrodrone_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/pyrodrone_f4

[env:quicksilver_f4]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/quicksilver_f4

[env:raceflight_revolt]
extends = stm32f405
build_flags =
  ${stm32f405.build_flags}
  -Isrc/targets/raceflight_revolt

[env:zeusf4evo]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/zeusf4evo

[env:zeusf4fr]
extends = stm32f411
build_flags =
  ${stm32f411.build_flags}
  -Isrc/targets/zeusf4fr